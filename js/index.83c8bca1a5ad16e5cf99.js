!function(Q){var t={};function n(B){if(t[B])return t[B].exports;var c=t[B]={i:B,l:!1,exports:{}};return Q[B].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=Q,n.c=t,n.d=function(Q,t,B){n.o(Q,t)||Object.defineProperty(Q,t,{enumerable:!0,get:B})},n.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},n.t=function(Q,t){if(1&t&&(Q=n(Q)),8&t)return Q;if(4&t&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(n.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&t&&"string"!=typeof Q)for(var c in Q)n.d(B,c,function(t){return Q[t]}.bind(null,c));return B},n.n=function(Q){var t=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return n.d(t,"a",t),t},n.o=function(Q,t){return Object.prototype.hasOwnProperty.call(Q,t)},n.p="",n(n.s=1)}([function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvaW5kZXguY3NzPzRiZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/pages/index.css\nvar pages = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/js/components/Selection.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Selection = /*#__PURE__*/function () {\n  function Selection(items, itemName, headerName, contentName, buttonName, modificatorName) {\n    _classCallCheck(this, Selection);\n\n    this.items = items;\n    this.itemName = itemName;\n    this.headerName = headerName;\n    this.contentName = contentName;\n    this.buttonName = buttonName;\n    this.modificatorName = modificatorName;\n  }\n\n  _createClass(Selection, [{\n    key: \"setEventListeners\",\n    value: function setEventListeners() {\n      var _this = this;\n\n      this.items.forEach(function (item) {\n        var target = item.querySelector(\".\".concat(_this.headerName));\n        var header = item.querySelector(\".\".concat(_this.headerName));\n        var content = item.querySelector(\".\".concat(_this.contentName));\n        var button = item.querySelector(\".\".concat(_this.buttonName));\n        target.addEventListener('click', function () {\n          item.classList.toggle(\"\".concat(_this.itemName).concat(_this.modificatorName));\n          header.classList.toggle(\"\".concat(_this.headerName).concat(_this.modificatorName));\n          content.classList.toggle(\"\".concat(_this.contentName).concat(_this.modificatorName));\n          button.classList.toggle(\"\".concat(_this.buttonName).concat(_this.modificatorName));\n        });\n      });\n    }\n  }]);\n\n  return Selection;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Menu.js\nfunction Menu_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Menu_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Menu_createClass(Constructor, protoProps, staticProps) { if (protoProps) Menu_defineProperties(Constructor.prototype, protoProps); if (staticProps) Menu_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Menu = /*#__PURE__*/function () {\n  function Menu(body, menu, button, burger, navigation, navigationLinks) {\n    Menu_classCallCheck(this, Menu);\n\n    this.body = body;\n    this.menu = menu;\n    this.button = button;\n    this.burger = burger;\n    this.navigation = navigation;\n    this.navigationLinks = navigationLinks;\n  }\n\n  Menu_createClass(Menu, [{\n    key: \"_switch\",\n    value: function _switch() {\n      this.burger.classList.toggle('menu__icon_active');\n      this.body.classList.toggle('no-scroll');\n      this.navigation.classList.toggle('header__navigation_opened');\n      this.navigation.closest('.header__navigation_opened') ? this.button.textContent = 'Закрыть' : this.button.textContent = 'Меню';\n      this.navigation.closest('.header__navigation_opened') ? this.button.textContent = 'Закрыть' : this.button.textContent = 'Меню';\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.menu.addEventListener('click', function () {\n        _this._switch();\n      });\n      this.navigationLinks.forEach(function (link) {\n        link.addEventListener('click', function () {\n          _this._switch();\n        });\n      });\n    }\n  }]);\n\n  return Menu;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Glitch.js\nfunction Glitch_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Glitch_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Glitch_createClass(Constructor, protoProps, staticProps) { if (protoProps) Glitch_defineProperties(Constructor.prototype, protoProps); if (staticProps) Glitch_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Glitch = /*#__PURE__*/function () {\n  function Glitch(prazeArray, phraze, interval) {\n    Glitch_classCallCheck(this, Glitch);\n\n    this.prazeArray = prazeArray;\n    this.phraze = phraze;\n    this.interval = interval;\n    this.counter = 0;\n  }\n\n  Glitch_createClass(Glitch, [{\n    key: \"_slideText\",\n    value: function _slideText(item, index, arrayLength) {\n      //если фраза состоит более чем из одного слова\n      if (item.split(' ').length > 1) {\n        var text = item.split(' ').join('<br>');\n        this.phraze.innerHTML = text; //Добавляем анимацию последнему слову\n\n        if (index === arrayLength - 1) {\n          this.phraze.classList.add('company__title_glitch');\n          var spanFirst = document.createElement('span');\n          spanFirst.classList.add('company__title_span');\n          var spanSecond = document.createElement('span');\n          spanSecond.classList.add('company__title_span');\n          this.phraze.prepend(spanFirst);\n          this.phraze.prepend(spanSecond);\n          spanFirst.innerHTML = text;\n          spanSecond.innerHTML = text;\n        }\n      } //если фраза состоит из одного слова то просто меняем текст\n      else this.phraze.textContent = item;\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      setInterval(function () {\n        if (_this.prazeArray[_this.counter] != undefined) {\n          _this._slideText(_this.prazeArray[_this.counter], _this.counter, _this.prazeArray.length);\n\n          _this.counter++;\n        } // Приостанавливаем выполнение функции если массив пуст\n        else {\n          clearInterval(_this);\n        }\n      }, this.interval);\n    }\n  }]);\n\n  return Glitch;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Map.js\nfunction Map_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Map_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Map_createClass(Constructor, protoProps, staticProps) { if (protoProps) Map_defineProperties(Constructor.prototype, protoProps); if (staticProps) Map_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Map = /*#__PURE__*/function () {\n  function Map(ymap, classPrompt) {\n    Map_classCallCheck(this, Map);\n\n    this.ymap = ymap;\n    this.classPrompt = classPrompt;\n  }\n\n  Map_createClass(Map, [{\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.ymap.addEventListener('touchmove', function (event) {\n        if (_this.ymap.contains(event.target) && event.targetTouches.length < 2) {\n          _this.ymap.classList.add(_this.classPrompt);\n        }\n      }, {\n        passive: true\n      });\n      this.ymap.addEventListener('touchend', function (event) {\n        if (_this.ymap.contains(event.target)) {\n          _this.ymap.classList.remove(_this.classPrompt);\n        }\n      });\n    }\n  }]);\n\n  return Map;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Ymaps.js\nfunction Ymaps_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Ymaps_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Ymaps_createClass(Constructor, protoProps, staticProps) { if (protoProps) Ymaps_defineProperties(Constructor.prototype, protoProps); if (staticProps) Ymaps_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Ymaps = /*#__PURE__*/function () {\n  function Ymaps(button, id, openClass, coordinatesX, coordinatesY, balloonHeader, balloonContent) {\n    Ymaps_classCallCheck(this, Ymaps);\n\n    this.button = button;\n    this.id = id;\n    this.openClass = openClass;\n    this.coordinatesX = coordinatesX;\n    this.coordinatesY = coordinatesY;\n    this.balloonHeader = balloonHeader;\n    this.balloonContent = balloonContent;\n    this.map = document.querySelector(\"#\".concat(this.id));\n    this.myMap;\n  }\n\n  Ymaps_createClass(Ymaps, [{\n    key: \"_init\",\n    value: function _init() {\n      if (!this.myMap) {\n        // Создание экземпляра карты и его привязка к контейнеру с заданным id (\"map\")\n        this.myMap = new ymaps.Map(\"\".concat(this.id), {\n          center: [this.coordinatesX, this.coordinatesY],\n          zoom: 16\n        }, {\n          searchControlProvider: 'yandex#search'\n        });\n        var myPlacemark = new ymaps.Placemark([this.coordinatesX, this.coordinatesY], {\n          balloonContentHeader: \"\".concat(this.balloonHeader),\n          balloonContentBody: \"\".concat(this.balloonContent) // balloonContentFooter: 'Телефон <a href=\"tel:+74959265423\">+74959265423</a>',\n\n        }, {\n          preset: 'islands#violetDotIcon',\n          iconColor: '#201F24'\n        });\n        this.myMap.geoObjects.add(myPlacemark);\n        this.myMap.controls.remove('searchControl');\n        this.myMap.controls.remove('trafficControl'); //отключаем зум колёсиком мышки\n\n        this.myMap.behaviors.disable('scrollZoom'); //на мобильных устройствах... (проверяем по userAgent браузера)\n\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n          //... отключаем перетаскивание карты\n          this.myMap.behaviors.disable('drag');\n        }\n\n        this.button.setAttribute('value', 'Скрыть карту');\n        this.map.classList.add(\"\".concat(this.openClass));\n      } else {\n        // Деструктор карты\n        this.myMap.destroy();\n        this.myMap = null;\n        this.button.setAttribute('value', 'На карте');\n        this.map.classList.remove(\"\".concat(this.openClass));\n      }\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.button.addEventListener('click', function (event) {\n        _this._init();\n      });\n    }\n  }]);\n\n  return Ymaps;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Popup.js\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Popup = /*#__PURE__*/function () {\n  function Popup(data) {\n    Popup_classCallCheck(this, Popup);\n\n    this.data = data;\n    this.totalPrice = 0;\n  } // создание элемента по тегу и классу + добавление текста\n\n\n  Popup_createClass(Popup, [{\n    key: \"_createElement\",\n    value: function _createElement(tag, className, text) {\n      var element = document.createElement(tag);\n      element.classList.add(className);\n\n      if (text !== undefined) {\n        element.textContent = text;\n        return element;\n      } else return element;\n    } // Создание блока услуг\n\n  }, {\n    key: \"_createItem\",\n    value: function _createItem(data) {\n      var _this = this;\n\n      var contentItem = this._createElement('div', 'popup__content-item');\n\n      var contentWrapper = this._createElement('div', 'popup__content-wrapper');\n\n      var contentTitle = this._createElement('h4', 'popup__content-title', data.name);\n\n      var contentButton = this._createElement('button', 'popup__content-button');\n\n      contentButton.setAttribute('aria-label', 'Закрыть');\n      contentWrapper.appendChild(contentTitle);\n      contentWrapper.appendChild(contentButton);\n      contentItem.appendChild(contentWrapper);\n      data.item.forEach(function (i) {\n        var contentCost = _this._createElement('div', 'popup__content-cost');\n\n        var contentSubtitle = _this._createElement('p', 'popup__content-subtitle', i.name);\n\n        var contentDots = _this._createElement('div', 'popup__content-dots');\n\n        var contentPrice = _this._createElement('p', 'popup__content-price', i.price);\n\n        contentPrice.setAttribute('data-counter', 1);\n\n        var contentUnit = _this._createElement('p', 'popup__content-subtitle-unit'); // Проверка на штучный элемент\n\n\n        if (i.unit === true) {\n          contentCost.appendChild(contentSubtitle);\n          contentCost.appendChild(contentUnit);\n          contentCost.appendChild(contentDots);\n          contentCost.appendChild(contentPrice);\n        } else {\n          contentCost.appendChild(contentSubtitle);\n          contentCost.appendChild(contentDots);\n          contentCost.appendChild(contentPrice);\n        } // Обновление цены при выборе услуги\n\n\n        contentPrice.addEventListener('click', function () {\n          if (!contentPrice.closest('.popup__content-price_selected')) {\n            contentPrice.classList.add('popup__content-price_selected');\n\n            if (i.unit === true) {\n              contentUnit.textContent = contentPrice.dataset.counter;\n              contentUnit.classList.add('popup__content-subtitle-unit_opened');\n            }\n\n            if (!contentButton.closest('.popup__content-button_opened')) {\n              contentButton.classList.add('popup__content-button_opened');\n            }\n\n            _this.totalPrice = new Number(_this.totalPrice) + new Number(contentPrice.textContent);\n\n            _this._updatePrice();\n          } else {\n            if (i.unit === true) {\n              var counter = contentPrice.dataset.counter;\n\n              if (counter < i.counter) {\n                counter++;\n                contentUnit.textContent = counter;\n                contentPrice.setAttribute('data-counter', counter);\n                _this.totalPrice = new Number(_this.totalPrice) + new Number(contentPrice.textContent);\n\n                _this._updatePrice();\n              } else return;\n            }\n          }\n        });\n        contentItem.appendChild(contentCost);\n      }); //Удаление всех услуг и цены при нажатии на крестик в секции\n\n      contentButton.addEventListener('click', function () {\n        var selectedCountItems = contentItem.querySelectorAll('.popup__content-subtitle-unit_opened');\n        var selectedItems = contentItem.querySelectorAll('.popup__content-price_selected');\n        var sectionPrice = Number(0);\n        selectedItems.forEach(function (item) {\n          item.classList.remove('popup__content-price_selected');\n          sectionPrice = sectionPrice + Number(item.textContent) * Number(item.dataset.counter);\n          item.setAttribute('data-counter', 1);\n        });\n        _this.totalPrice = Number(_this.totalPrice) - Number(sectionPrice.toFixed(2));\n\n        _this._updatePrice();\n\n        contentButton.classList.remove('popup__content-button_opened');\n\n        if (selectedCountItems.length !== 0) {\n          selectedCountItems.forEach(function (item) {\n            item.classList.remove('popup__content-subtitle-unit_opened');\n          });\n        }\n      });\n      return contentItem;\n    } // Обновление итоговой стоимости выбранных услуг\n\n  }, {\n    key: \"_updatePrice\",\n    value: function _updatePrice() {\n      var cost = document.querySelector('.popup__cost');\n\n      if (this.totalPrice.toFixed(2) < 0 || this.totalPrice.toFixed(2) == 0) {\n        this.totalPrice = 0;\n        cost.textContent = this.totalPrice;\n      } else {\n        cost.textContent = this.totalPrice.toFixed(2);\n      }\n    } // Создание попапа\n\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var _this2 = this;\n\n      var popup = this._createElement('div', 'popup');\n\n      var popupHeader = this._createElement('div', 'popup__header');\n\n      var popupName = this._createElement('h3', 'popup__name', this.data.name);\n\n      var popupWrapper = this._createElement('div', 'popup__wrapper');\n\n      var popupCost = this._createElement('p', 'popup__cost', this.totalPrice);\n\n      var popupButton = this._createElement('button', 'popup__button');\n\n      popupButton.setAttribute('aria-label', 'Закрыть');\n\n      var popupContent = this._createElement('div', 'popup__content');\n\n      this.data.service.forEach(function (item) {\n        popupContent.appendChild(_this2._createItem(item));\n      });\n\n      var popupFooter = this._createElement('p', 'popup__footer', '*Цены указаны с учетом ');\n\n      var popupLink = this._createElement('a', 'popup__link', 'скидки\\xa0по\\xa0карте');\n\n      popupLink.setAttribute('href', '#clients');\n      popup.appendChild(popupHeader);\n      popupHeader.appendChild(popupName);\n      popupHeader.appendChild(popupWrapper);\n      popupWrapper.appendChild(popupCost);\n      popupWrapper.appendChild(popupButton);\n      popup.appendChild(popupContent);\n      popupFooter.appendChild(popupLink);\n      popup.appendChild(popupFooter);\n      popupButton.addEventListener('click', function () {\n        popup.remove();\n      });\n      popupLink.addEventListener('click', function () {\n        popup.remove();\n      });\n      this.popupButton = popupButton;\n      this.popupLink = popupLink;\n      this.popup = popup;\n      return popup;\n    }\n  }]);\n\n  return Popup;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Popups.js\nfunction Popups_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Popups_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Popups_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popups_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popups_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Popups = /*#__PURE__*/function () {\n  function Popups(container, data, openingButtons, createPopup, popupName, closeButtonClass, modificatorName) {\n    Popups_classCallCheck(this, Popups);\n\n    this.container = container;\n    this.data = data;\n    this.openingButtons = openingButtons;\n    this.createPopup = createPopup;\n    this.popupName = popupName;\n    this.closeButtonClass = closeButtonClass;\n    this.modificatorName = modificatorName;\n  }\n\n  Popups_createClass(Popups, [{\n    key: \"_open\",\n    value: function _open(popup) {\n      popup.classList.add(\"\".concat(this.popupName).concat(this.modificatorName));\n    }\n  }, {\n    key: \"setEventListeners\",\n    value: function setEventListeners() {\n      var _this = this;\n\n      this.openingButtons.forEach(function (button) {\n        button.addEventListener('click', function () {\n          var popup = _this.createPopup(_this.data)._create();\n\n          _this.container.appendChild(popup);\n\n          _this._open(popup);\n        });\n      });\n    }\n  }]);\n\n  return Popups;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/index.js\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  //избавиться от jquery в картах и переписать Ymap \n  //Не забыть про предзагрузку шрифтов\n  var prazeArray = ['Beauti Baza', 'you are beautiful', 'Ты Прекрасна', '你很美丽', 'ты прыгожая', 'du bist schön', 'ти прекрасна', 'tu es belle', 'eres hermoso', 'jesteś piękna', 'BEAUTI BAZA'];\n  var imagesGlitchSlider = ['./images/about_1.jpg', './images/about_2.jpg', './images/about_3.jpg', './images/about_4.jpg', './images/about_5.jpg'];\n  var glitchSliderConfig = {\n    nav: false,\n    // navElement: '.scene-nav',\n    slideImages: imagesGlitchSlider,\n    stageWidth: 1920,\n    stageHeight: 1080,\n    displacementImage: './images/displace-circle.jpg',\n    fullScreen: false,\n    transitionDuration: 0.2,\n    // must be 0.1 > transitionGhostDuration\n    transitionGhostDuration: 0.25,\n    transitionFilterIntensity: 350,\n    transitionSpriteIntensity: 2,\n    mouseDispIntensity: 3,\n    interactive: true,\n    autoPlay: true,\n    autoPlaySpeed: 3000\n  };\n  var selectionItems = document.querySelectorAll('.selection__item');\n  var bannerText = document.querySelector('.company__title');\n  var root = document.querySelector('.root');\n  var menuContainer = document.querySelector('.menu');\n  var menuButton = document.querySelector('.menu__button');\n  var menuIcon = document.querySelector('.menu__icon');\n  var navigation = document.querySelector('.header__navigation');\n  var menuLinks = document.querySelectorAll('.header__link');\n  var servicesButtons = document.querySelectorAll('.services__price-more');\n  var mapOne = document.querySelector('#mapOne');\n  var buttonMapsOne = document.querySelector('#buttonMapsOne');\n  var mapTwo = document.querySelector('#mapTwo');\n  var buttonMapsTwo = document.querySelector('#buttonMapsTwo'); //Id - Id блока карты, buttonId - Id кнопка, coordinatesX и coordinatesY координаты, заголовок и текст метки\n\n  var ymapsOne = new Ymaps(buttonMapsOne, 'mapOne', 'contacts__maps_opened', '52.428975', '31.007007', 'Бьюти База', 'г. Гомель, ул. Кирова, 20');\n  var ymapsTwo = new Ymaps(buttonMapsTwo, 'mapTwo', 'contacts__maps_opened', '52.404660', '30.941536', 'Бьюти База', 'г. Гомель, пр-т Октября, 95');\n  var menu = new Menu(root, menuContainer, menuButton, menuIcon, navigation, menuLinks);\n  var selection = new Selection(selectionItems, 'selection__item', 'selection__header', 'selection__content', 'selection__button', '_opened');\n\n  var createPopup = function createPopup() {\n    for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n      arg[_key] = arguments[_key];\n    }\n\n    return _construct(Popup, arg);\n  };\n\n  var popups = new Popups(root, nails, servicesButtons, createPopup, 'popup', 'popup__button', '_opened');\n  var glitch = new Glitch(prazeArray, bannerText, 600);\n  var glitchSlider = new rbgShiftSlider(glitchSliderConfig);\n  var mapOnePrompt = new Map(mapOne, 'contacts__maps_cover');\n  var mapTwoPrompt = new Map(mapTwo, 'contacts__maps_cover'); // --------------------------------------------------------------------------------------------------------------------\n\n  menu.setEventListener();\n  glitch.run();\n  selection.setEventListeners();\n  ymapsOne.setEventListener();\n  ymapsTwo.setEventListener();\n  mapTwoPrompt.setEventListener();\n  mapOnePrompt.setEventListener();\n  popups.setEventListeners();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}]);