!function(Q){var t={};function n(B){if(t[B])return t[B].exports;var c=t[B]={i:B,l:!1,exports:{}};return Q[B].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=Q,n.c=t,n.d=function(Q,t,B){n.o(Q,t)||Object.defineProperty(Q,t,{enumerable:!0,get:B})},n.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},n.t=function(Q,t){if(1&t&&(Q=n(Q)),8&t)return Q;if(4&t&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(n.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&t&&"string"!=typeof Q)for(var c in Q)n.d(B,c,function(t){return Q[t]}.bind(null,c));return B},n.n=function(Q){var t=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return n.d(t,"a",t),t},n.o=function(Q,t){return Object.prototype.hasOwnProperty.call(Q,t)},n.p="",n(n.s=2)}([function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvaW5kZXguY3NzPzRiZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval("console.log('start GSAP');\ngsap.registerPlugin(ScrollTrigger);\nvar tl = gsap.timeline({\n  defaults: {\n    duration: .3,\n    ease: \"sine\"\n  }\n});\ntl.from('.company', {\n  delay: .3,\n  opacity: 0\n}).from('.company__title', {\n  delay: .5,\n  y: \"20\",\n  opacity: 0\n}).from('.company__subtitle', {\n  y: \"20\",\n  opacity: 0\n}).from('.company__button', {\n  opacity: 0\n}).from('.company__contacts, .icon__scroll', {\n  opacity: 0\n}); // gsap.to('.company', {\n//   scrollTrigger: {\n//     // scrub: 1\n//     // toggleAction: 'restart pause reverse pause'\n//   },\n//   opacity: 0,\n// })\n// gsap.timeline({\n//   scrollTrigger: {\n//     trigger: '.company',\n//     toggleActions: 'restart none reverse none',\n//     start: 'top top',\n//     // endTrigger: '.about',\n//     end: 'center top',\n//     // markers: true,\n//     scrub: 1,\n//     pin: true,\n//   },\n// })\n//   .to('.company__title', {\n//     x: '-40',\n//     opacity: 0,\n//   })\n//   .to('.company__subtitle', {\n//     x: '-40',\n//     opacity: 0,\n//   })\n//   .to('.company__button', {\n//     x: '-40',\n//     opacity: 0,\n//   })\n//   .to('.company', {\n//     // scale: 1.5,\n//     opacity: 0,\n//   })\n// gsap.timeline({\n//   scrollTrigger: {\n//     trigger: '.about',\n//     toggleActions: 'restart none reverse none',\n//     start: 'top top',\n//     // endTrigger: '.about',\n//     // end: 'bottom center',\n//     end: 'center top',\n//     markers: true,\n//     scrub: 1,\n//     pin: true,\n//   },\n// })\n//   .from('.gsap__about-title', {\n//     opacity: 0,\n//     y: 40,\n//   })\n//   .from('.gsap__about-subtitle', {\n//     opacity: 0,\n//     y: 40,\n//   })\n//   .from('.about__img', {\n//     opacity: 0,\n//   })\n//   .from('.about__content', {\n//     opacity: 0,\n//     y: 40,\n//   })//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9HU0FQLmpzP2ViMWUiXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsImdzYXAiLCJyZWdpc3RlclBsdWdpbiIsIlNjcm9sbFRyaWdnZXIiLCJ0bCIsInRpbWVsaW5lIiwiZGVmYXVsdHMiLCJkdXJhdGlvbiIsImVhc2UiLCJmcm9tIiwiZGVsYXkiLCJvcGFjaXR5IiwieSJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFFQUMsSUFBSSxDQUFDQyxjQUFMLENBQW9CQyxhQUFwQjtBQUVBLElBQUlDLEVBQUUsR0FBR0gsSUFBSSxDQUFDSSxRQUFMLENBQWM7QUFBRUMsVUFBUSxFQUFFO0FBQUVDLFlBQVEsRUFBRSxFQUFaO0FBQWdCQyxRQUFJLEVBQUU7QUFBdEI7QUFBWixDQUFkLENBQVQ7QUFFQUosRUFBRSxDQUFDSyxJQUFILENBQVEsVUFBUixFQUFvQjtBQUFFQyxPQUFLLEVBQUUsRUFBVDtBQUFhQyxTQUFPLEVBQUU7QUFBdEIsQ0FBcEIsRUFDR0YsSUFESCxDQUNRLGlCQURSLEVBQzJCO0FBQUVDLE9BQUssRUFBRSxFQUFUO0FBQWFFLEdBQUMsRUFBRSxJQUFoQjtBQUFzQkQsU0FBTyxFQUFFO0FBQS9CLENBRDNCLEVBRUdGLElBRkgsQ0FFUSxvQkFGUixFQUU4QjtBQUFFRyxHQUFDLEVBQUUsSUFBTDtBQUFXRCxTQUFPLEVBQUU7QUFBcEIsQ0FGOUIsRUFHR0YsSUFISCxDQUdRLGtCQUhSLEVBRzRCO0FBQUVFLFNBQU8sRUFBRTtBQUFYLENBSDVCLEVBSUdGLElBSkgsQ0FJUSxtQ0FKUixFQUk2QztBQUFFRSxTQUFPLEVBQUU7QUFBWCxDQUo3QyxFLENBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZygnc3RhcnQgR1NBUCcpO1xyXG5cclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmxldCB0bCA9IGdzYXAudGltZWxpbmUoeyBkZWZhdWx0czogeyBkdXJhdGlvbjogLjMsIGVhc2U6IFwic2luZVwiIH0gfSk7XHJcblxyXG50bC5mcm9tKCcuY29tcGFueScsIHsgZGVsYXk6IC4zLCBvcGFjaXR5OiAwLCB9KVxyXG4gIC5mcm9tKCcuY29tcGFueV9fdGl0bGUnLCB7IGRlbGF5OiAuNSwgeTogXCIyMFwiLCBvcGFjaXR5OiAwLCB9KVxyXG4gIC5mcm9tKCcuY29tcGFueV9fc3VidGl0bGUnLCB7IHk6IFwiMjBcIiwgb3BhY2l0eTogMCwgfSlcclxuICAuZnJvbSgnLmNvbXBhbnlfX2J1dHRvbicsIHsgb3BhY2l0eTogMCwgfSlcclxuICAuZnJvbSgnLmNvbXBhbnlfX2NvbnRhY3RzLCAuaWNvbl9fc2Nyb2xsJywgeyBvcGFjaXR5OiAwLCB9KVxyXG5cclxuLy8gZ3NhcC50bygnLmNvbXBhbnknLCB7XHJcbi8vICAgc2Nyb2xsVHJpZ2dlcjoge1xyXG4vLyAgICAgLy8gc2NydWI6IDFcclxuLy8gICAgIC8vIHRvZ2dsZUFjdGlvbjogJ3Jlc3RhcnQgcGF1c2UgcmV2ZXJzZSBwYXVzZSdcclxuLy8gICB9LFxyXG4vLyAgIG9wYWNpdHk6IDAsXHJcbi8vIH0pXHJcblxyXG5cclxuLy8gZ3NhcC50aW1lbGluZSh7XHJcbi8vICAgc2Nyb2xsVHJpZ2dlcjoge1xyXG4vLyAgICAgdHJpZ2dlcjogJy5jb21wYW55JyxcclxuLy8gICAgIHRvZ2dsZUFjdGlvbnM6ICdyZXN0YXJ0IG5vbmUgcmV2ZXJzZSBub25lJyxcclxuLy8gICAgIHN0YXJ0OiAndG9wIHRvcCcsXHJcbi8vICAgICAvLyBlbmRUcmlnZ2VyOiAnLmFib3V0JyxcclxuLy8gICAgIGVuZDogJ2NlbnRlciB0b3AnLFxyXG4vLyAgICAgLy8gbWFya2VyczogdHJ1ZSxcclxuLy8gICAgIHNjcnViOiAxLFxyXG4vLyAgICAgcGluOiB0cnVlLFxyXG4vLyAgIH0sXHJcbi8vIH0pXHJcbi8vICAgLnRvKCcuY29tcGFueV9fdGl0bGUnLCB7XHJcbi8vICAgICB4OiAnLTQwJyxcclxuLy8gICAgIG9wYWNpdHk6IDAsXHJcbi8vICAgfSlcclxuLy8gICAudG8oJy5jb21wYW55X19zdWJ0aXRsZScsIHtcclxuLy8gICAgIHg6ICctNDAnLFxyXG4vLyAgICAgb3BhY2l0eTogMCxcclxuLy8gICB9KVxyXG4vLyAgIC50bygnLmNvbXBhbnlfX2J1dHRvbicsIHtcclxuLy8gICAgIHg6ICctNDAnLFxyXG4vLyAgICAgb3BhY2l0eTogMCxcclxuLy8gICB9KVxyXG4vLyAgIC50bygnLmNvbXBhbnknLCB7XHJcbi8vICAgICAvLyBzY2FsZTogMS41LFxyXG4vLyAgICAgb3BhY2l0eTogMCxcclxuLy8gICB9KVxyXG5cclxuXHJcbi8vIGdzYXAudGltZWxpbmUoe1xyXG4vLyAgIHNjcm9sbFRyaWdnZXI6IHtcclxuLy8gICAgIHRyaWdnZXI6ICcuYWJvdXQnLFxyXG4vLyAgICAgdG9nZ2xlQWN0aW9uczogJ3Jlc3RhcnQgbm9uZSByZXZlcnNlIG5vbmUnLFxyXG4vLyAgICAgc3RhcnQ6ICd0b3AgdG9wJyxcclxuLy8gICAgIC8vIGVuZFRyaWdnZXI6ICcuYWJvdXQnLFxyXG4vLyAgICAgLy8gZW5kOiAnYm90dG9tIGNlbnRlcicsXHJcbi8vICAgICBlbmQ6ICdjZW50ZXIgdG9wJyxcclxuLy8gICAgIG1hcmtlcnM6IHRydWUsXHJcbi8vICAgICBzY3J1YjogMSxcclxuLy8gICAgIHBpbjogdHJ1ZSxcclxuLy8gICB9LFxyXG4vLyB9KVxyXG4vLyAgIC5mcm9tKCcuZ3NhcF9fYWJvdXQtdGl0bGUnLCB7XHJcbi8vICAgICBvcGFjaXR5OiAwLFxyXG4vLyAgICAgeTogNDAsXHJcbi8vICAgfSlcclxuLy8gICAuZnJvbSgnLmdzYXBfX2Fib3V0LXN1YnRpdGxlJywge1xyXG4vLyAgICAgb3BhY2l0eTogMCxcclxuLy8gICAgIHk6IDQwLFxyXG4vLyAgIH0pXHJcbi8vICAgLmZyb20oJy5hYm91dF9faW1nJywge1xyXG4vLyAgICAgb3BhY2l0eTogMCxcclxuLy8gICB9KVxyXG4vLyAgIC5mcm9tKCcuYWJvdXRfX2NvbnRlbnQnLCB7XHJcbi8vICAgICBvcGFjaXR5OiAwLFxyXG4vLyAgICAgeTogNDAsXHJcbi8vICAgfSlcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/pages/index.css\nvar pages = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/js/components/Selection.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Selection = /*#__PURE__*/function () {\n  function Selection(items, itemName, headerName, contentName, buttonName, modificatorName) {\n    _classCallCheck(this, Selection);\n\n    this.items = items;\n    this.itemName = itemName;\n    this.headerName = headerName;\n    this.contentName = contentName;\n    this.buttonName = buttonName;\n    this.modificatorName = modificatorName;\n  }\n\n  _createClass(Selection, [{\n    key: \"setEventListeners\",\n    value: function setEventListeners() {\n      var _this = this;\n\n      this.items.forEach(function (item) {\n        var target = item.querySelector(\".\".concat(_this.headerName));\n        var header = item.querySelector(\".\".concat(_this.headerName));\n        var content = item.querySelector(\".\".concat(_this.contentName));\n        var button = item.querySelector(\".\".concat(_this.buttonName));\n        target.addEventListener('click', function () {\n          item.classList.toggle(\"\".concat(_this.itemName).concat(_this.modificatorName));\n          header.classList.toggle(\"\".concat(_this.headerName).concat(_this.modificatorName));\n          content.classList.toggle(\"\".concat(_this.contentName).concat(_this.modificatorName));\n          button.classList.toggle(\"\".concat(_this.buttonName).concat(_this.modificatorName));\n        });\n      });\n    }\n  }]);\n\n  return Selection;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Menu.js\nfunction Menu_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Menu_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Menu_createClass(Constructor, protoProps, staticProps) { if (protoProps) Menu_defineProperties(Constructor.prototype, protoProps); if (staticProps) Menu_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Menu = /*#__PURE__*/function () {\n  function Menu(body, menu, button, burger, navigation, navigationLinks, scroll) {\n    Menu_classCallCheck(this, Menu);\n\n    this.body = body;\n    this.menu = menu;\n    this.button = button;\n    this.burger = burger;\n    this.navigation = navigation;\n    this.navigationLinks = navigationLinks;\n    this.scroll = scroll;\n  }\n\n  Menu_createClass(Menu, [{\n    key: \"_switch\",\n    value: function _switch() {\n      this.navigation.classList.toggle('menu__navigation_opened');\n      this.burger.classList.toggle('menu__icon_active');\n      this.navigation.closest('.menu__navigation_opened') ? this.button.textContent = 'Закрыть' : this.button.textContent = 'Меню';\n      this.navigation.closest('.menu__navigation_opened') ? this.scroll._hideScroll() : this.scroll._resetHideScroll();\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.menu.addEventListener('click', function () {\n        _this._switch();\n      });\n      this.navigationLinks.forEach(function (link) {\n        link.addEventListener('click', function () {\n          _this._switch();\n        });\n      });\n    }\n  }]);\n\n  return Menu;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Glitch.js\nfunction Glitch_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Glitch_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Glitch_createClass(Constructor, protoProps, staticProps) { if (protoProps) Glitch_defineProperties(Constructor.prototype, protoProps); if (staticProps) Glitch_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Glitch = /*#__PURE__*/function () {\n  function Glitch(prazeArray, phraze, interval) {\n    Glitch_classCallCheck(this, Glitch);\n\n    this.prazeArray = prazeArray;\n    this.phraze = phraze;\n    this.interval = interval;\n    this.counter = 0;\n  }\n\n  Glitch_createClass(Glitch, [{\n    key: \"_slideText\",\n    value: function _slideText(item, index, arrayLength) {\n      //если фраза состоит более чем из одного слова\n      if (item.split(' ').length > 1) {\n        var text = item.split(' ').join('<br>');\n        this.phraze.innerHTML = text; //Добавляем анимацию последнему слову\n\n        if (index === arrayLength - 1) {\n          this.phraze.classList.add('company__title_glitch');\n          var spanFirst = document.createElement('span');\n          spanFirst.classList.add('company__title_span');\n          var spanSecond = document.createElement('span');\n          spanSecond.classList.add('company__title_span');\n          this.phraze.prepend(spanFirst);\n          this.phraze.prepend(spanSecond);\n          spanFirst.innerHTML = text;\n          spanSecond.innerHTML = text;\n        }\n      } //если фраза состоит из одного слова то просто меняем текст\n      else this.phraze.textContent = item;\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      setInterval(function () {\n        if (_this.prazeArray[_this.counter] != undefined) {\n          _this._slideText(_this.prazeArray[_this.counter], _this.counter, _this.prazeArray.length);\n\n          _this.counter++;\n        } // Приостанавливаем выполнение функции если массив пуст\n        else {\n          clearInterval(_this);\n        }\n      }, this.interval);\n    }\n  }]);\n\n  return Glitch;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Map.js\nfunction Map_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Map_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Map_createClass(Constructor, protoProps, staticProps) { if (protoProps) Map_defineProperties(Constructor.prototype, protoProps); if (staticProps) Map_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Map = /*#__PURE__*/function () {\n  function Map(ymap, classPrompt) {\n    Map_classCallCheck(this, Map);\n\n    this.ymap = ymap;\n    this.classPrompt = classPrompt;\n  }\n\n  Map_createClass(Map, [{\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.ymap.addEventListener('touchmove', function (event) {\n        if (_this.ymap.contains(event.target) && event.targetTouches.length < 2) {\n          _this.ymap.classList.add(_this.classPrompt);\n        }\n      }, {\n        passive: true\n      });\n      this.ymap.addEventListener('touchend', function (event) {\n        if (_this.ymap.contains(event.target)) {\n          _this.ymap.classList.remove(_this.classPrompt);\n        }\n      });\n    }\n  }]);\n\n  return Map;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Ymaps.js\nfunction Ymaps_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Ymaps_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Ymaps_createClass(Constructor, protoProps, staticProps) { if (protoProps) Ymaps_defineProperties(Constructor.prototype, protoProps); if (staticProps) Ymaps_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Ymaps = /*#__PURE__*/function () {\n  function Ymaps(button, id, openClass, coordinatesX, coordinatesY, balloonHeader, balloonContent) {\n    Ymaps_classCallCheck(this, Ymaps);\n\n    this.button = button;\n    this.id = id;\n    this.openClass = openClass;\n    this.coordinatesX = coordinatesX;\n    this.coordinatesY = coordinatesY;\n    this.balloonHeader = balloonHeader;\n    this.balloonContent = balloonContent;\n    this.map = document.querySelector(\"#\".concat(this.id));\n    this.myMap;\n  }\n\n  Ymaps_createClass(Ymaps, [{\n    key: \"_init\",\n    value: function _init() {\n      if (!this.myMap) {\n        // Создание экземпляра карты и его привязка к контейнеру с заданным id (\"map\")\n        this.myMap = new ymaps.Map(\"\".concat(this.id), {\n          center: [this.coordinatesX, this.coordinatesY],\n          zoom: 16\n        }, {\n          searchControlProvider: 'yandex#search'\n        });\n        var myPlacemark = new ymaps.Placemark([this.coordinatesX, this.coordinatesY], {\n          balloonContentHeader: \"\".concat(this.balloonHeader),\n          balloonContentBody: \"\".concat(this.balloonContent) // balloonContentFooter: 'Телефон <a href=\"tel:+74959265423\">+74959265423</a>',\n\n        }, {\n          preset: 'islands#violetDotIcon',\n          iconColor: '#201F24'\n        });\n        this.myMap.geoObjects.add(myPlacemark);\n        this.myMap.controls.remove('searchControl');\n        this.myMap.controls.remove('trafficControl'); //отключаем зум колёсиком мышки\n\n        this.myMap.behaviors.disable('scrollZoom'); //на мобильных устройствах... (проверяем по userAgent браузера)\n\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n          //... отключаем перетаскивание карты\n          this.myMap.behaviors.disable('drag');\n        }\n\n        this.button.setAttribute('value', 'Скрыть карту');\n        this.map.classList.add(\"\".concat(this.openClass));\n      } else {\n        // Деструктор карты\n        this.myMap.destroy();\n        this.myMap = null;\n        this.button.setAttribute('value', 'На карте');\n        this.map.classList.remove(\"\".concat(this.openClass));\n      }\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.button.addEventListener('click', function (event) {\n        _this._init();\n\n        _this.button.classList.toggle('button_active');\n      });\n    }\n  }]);\n\n  return Ymaps;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Popup.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Popup = /*#__PURE__*/function () {\n  function Popup(data, container, menu, scroll) {\n    Popup_classCallCheck(this, Popup);\n\n    this.data = data;\n    this.container = container;\n    this.menu = menu;\n    this.scroll = scroll;\n    this.totalPrice = 0;\n  } // создание элемента по тегу и классу + добавление текста\n\n\n  Popup_createClass(Popup, [{\n    key: \"_createElement\",\n    value: function _createElement(tag, className, text) {\n      var element = document.createElement(tag);\n      element.classList.add(className);\n\n      if (text !== undefined) {\n        element.textContent = text;\n        return element;\n      } else return element;\n    }\n  }, {\n    key: \"_setPriceListener\",\n    value: function _setPriceListener(element, unit, counter, contentUnit, contentButton, object, contentCost) {\n      var _this = this;\n\n      element.addEventListener('click', function (event) {\n        if (!element.closest('.popup__content-price_selected') && !object) {\n          element.classList.add('popup__content-price_selected'); //условие для штушной услуги\n\n          if (unit === true) {\n            contentUnit.textContent = element.dataset.counter;\n            contentUnit.classList.add('popup__content-subtitle-unit_opened');\n          }\n\n          if (!contentButton.closest('.popup__button_opened')) {\n            contentButton.classList.add('popup__button_opened');\n          }\n\n          _this.totalPrice = new Number(_this.totalPrice) + new Number(element.textContent);\n\n          _this._updatePrice();\n        } else if (object) {\n          var selected = contentCost.querySelector('.popup__content-price_selected');\n\n          if (selected === null) {\n            element.classList.add('popup__content-price_selected');\n\n            if (!contentButton.closest('.popup__button_opened')) {\n              contentButton.classList.add('popup__button_opened');\n            }\n\n            _this.totalPrice = new Number(_this.totalPrice) + new Number(element.textContent);\n\n            _this._updatePrice();\n          } else return;\n        } else {\n          if (unit === true) {\n            var n = element.dataset.counter;\n\n            if (n < counter) {\n              n++;\n              contentUnit.textContent = n;\n              element.setAttribute('data-counter', n);\n              _this.totalPrice = new Number(_this.totalPrice) + new Number(element.textContent);\n\n              _this._updatePrice();\n            } else return;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_setContentPriceData\",\n    value: function _setContentPriceData(price) {\n      var contentPrice = this._createElement('p', 'popup__content-price', price);\n\n      contentPrice.setAttribute('data-counter', 1);\n      return contentPrice;\n    } // Создание блока услуг content-item\n\n  }, {\n    key: \"_createItem\",\n    value: function _createItem(data) {\n      var _this2 = this;\n\n      var contentItem = this._createElement('div', 'popup__content-item');\n\n      var contentWrapper = this._createElement('div', 'popup__content-wrapper');\n\n      var contentTitle = this._createElement('h4', 'popup__content-title', data.name);\n\n      var contentButton = this._createElement('button', 'popup__button');\n\n      contentButton.setAttribute('aria-label', 'Очистить');\n      contentWrapper.appendChild(contentTitle);\n      contentWrapper.appendChild(contentButton);\n      contentItem.appendChild(contentWrapper);\n      data.item.forEach(function (i) {\n        var contentCost = _this2._createElement('div', 'popup__content-cost');\n\n        var contentSubtitle = _this2._createElement('p', 'popup__content-subtitle', i.name);\n\n        var contentDots = _this2._createElement('div', 'popup__content-dots');\n\n        var contentUnit = _this2._createElement('p', 'popup__content-subtitle-unit'); // Проверка на штучный элемент\n\n\n        if (i.unit === true) {\n          contentCost.appendChild(contentSubtitle);\n          contentCost.appendChild(contentUnit);\n          contentCost.appendChild(contentDots);\n\n          var contentPrice = _this2._setContentPriceData(i.price);\n\n          _this2._setPriceListener(contentPrice, i.unit, i.counter, contentUnit, contentButton);\n\n          contentCost.appendChild(contentPrice);\n        } else {\n          contentCost.appendChild(contentSubtitle);\n          contentCost.appendChild(contentDots); // проверка на несколько цен\n\n          if (_typeof(i.price) === 'object') {\n            var _iterator = _createForOfIteratorHelper(i.price),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var price = _step.value;\n\n                var _contentPrice = _this2._setContentPriceData(price);\n\n                contentCost.appendChild(_contentPrice);\n\n                _this2._setPriceListener(_contentPrice, i.unit, i.counter, contentUnit, contentButton, true, contentCost);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            var _contentPrice2 = _this2._setContentPriceData(i.price);\n\n            contentCost.appendChild(_contentPrice2);\n\n            _this2._setPriceListener(_contentPrice2, i.unit, i.counter, contentUnit, contentButton);\n          }\n        }\n\n        contentItem.appendChild(contentCost);\n      }); //Удаление всех услуг и цены при нажатии на крестик в секции\n\n      contentButton.addEventListener('click', function () {\n        var selectedCountItems = contentItem.querySelectorAll('.popup__content-subtitle-unit_opened');\n        var selectedItems = contentItem.querySelectorAll('.popup__content-price_selected');\n        var sectionPrice = Number(0);\n        selectedItems.forEach(function (item) {\n          item.classList.remove('popup__content-price_selected');\n          sectionPrice = sectionPrice + Number(item.textContent) * Number(item.dataset.counter);\n          item.setAttribute('data-counter', 1);\n        });\n        _this2.totalPrice = Number(_this2.totalPrice) - Number(sectionPrice.toFixed(2));\n\n        _this2._updatePrice();\n\n        contentButton.classList.remove('popup__button_opened');\n\n        if (selectedCountItems.length !== 0) {\n          selectedCountItems.forEach(function (item) {\n            item.classList.remove('popup__content-subtitle-unit_opened');\n          });\n        }\n      });\n      return contentItem;\n    } // Обновление итоговой стоимости выбранных услуг\n\n  }, {\n    key: \"_updatePrice\",\n    value: function _updatePrice() {\n      if (this.totalPrice.toFixed(2) < 0 || this.totalPrice.toFixed(2) == 0) {\n        this.totalPrice = 0;\n        this.popupCost.textContent = this.totalPrice;\n      } else {\n        this.popupCost.textContent = this.totalPrice.toFixed(2);\n      }\n    } // Создание попапа\n\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var _this3 = this;\n\n      var popup = this._createElement('div', 'popup');\n\n      popup.setAttribute('data-name', this.data.id);\n\n      var popupHeader = this._createElement('div', 'popup__header');\n\n      popupHeader.classList.add('color_border');\n\n      var popupName = this._createElement('h3', 'popup__name', this.data.name);\n\n      var popupWrapper = this._createElement('div', 'popup__wrapper');\n\n      var popupCost = this._createElement('p', 'popup__cost', this.totalPrice);\n\n      var popupButton = this._createElement('button', 'popup__button');\n\n      popupButton.classList.add('popup__button_opened');\n      popupButton.setAttribute('aria-label', 'Закрыть');\n\n      var popupContent = this._createElement('div', 'popup__content');\n\n      this.data.service.forEach(function (item) {\n        popupContent.appendChild(_this3._createItem(item));\n      });\n\n      var popupFooter = this._createElement('p', 'popup__footer', '*Цены указаны с учетом ');\n\n      var popupLink = this._createElement('a', 'popup__link', 'скидки\\xa0по\\xa0карте');\n\n      popupLink.setAttribute('href', '#clients');\n      popup.appendChild(popupHeader);\n      popupHeader.appendChild(popupName);\n      popupHeader.appendChild(popupWrapper);\n      popupWrapper.appendChild(popupCost);\n      popupWrapper.appendChild(popupButton);\n      popup.appendChild(popupContent);\n      popupFooter.appendChild(popupLink);\n      popup.appendChild(popupFooter);\n      popupButton.addEventListener('click', function () {\n        _this3.menu.classList.remove('menu_closed');\n\n        _this3.scroll._resetHideScroll();\n\n        popup.remove();\n      });\n      popupLink.addEventListener('click', function () {\n        _this3.menu.classList.remove('menu_closed');\n\n        _this3.scroll._resetHideScroll();\n\n        popup.remove();\n      });\n      this.popupCost = popupCost;\n      return popup;\n    }\n  }]);\n\n  return Popup;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Popups.js\nfunction Popups_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Popups_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Popups_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popups_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popups_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Popups = /*#__PURE__*/function () {\n  function Popups(container, data, openingButtons, createPopup, popupName, closeButtonClass, modificatorName, scroll, menu) {\n    Popups_classCallCheck(this, Popups);\n\n    this.container = container;\n    this.data = data;\n    this.openingButtons = openingButtons;\n    this.createPopup = createPopup;\n    this.popupName = popupName;\n    this.closeButtonClass = closeButtonClass;\n    this.modificatorName = modificatorName;\n    this.scroll = scroll;\n    this.menu = menu;\n    this.popup = undefined;\n    this.button = undefined;\n  }\n\n  Popups_createClass(Popups, [{\n    key: \"_setListenerForClosePopup\",\n    value: function _setListenerForClosePopup(button) {\n      var _this = this;\n\n      this.container.addEventListener('click', function (event) {\n        if (_this.popup != undefined && _this.button != undefined && event.target != button) {\n          if (!_this.popup.contains(event.target)) {\n            _this.menu.classList.remove('menu_closed');\n\n            _this.scroll._resetHideScroll();\n\n            _this.popup.remove();\n\n            _this.popup = undefined;\n            _this.button = undefined;\n          } else return;\n        } else return;\n      });\n    }\n  }, {\n    key: \"_open\",\n    value: function _open(popup) {\n      popup.classList.add(\"\".concat(this.popupName).concat(this.modificatorName));\n    }\n  }, {\n    key: \"setEventListeners\",\n    value: function setEventListeners() {\n      var _this2 = this;\n\n      this.openingButtons.forEach(function (button) {\n        button.addEventListener('click', function (event) {\n          var buttonId = event.target.id.toLowerCase();\n\n          var actualData = _this2.data.find(function (data) {\n            return data.id === buttonId;\n          }); //создаем попап по Id в кнопке\n\n\n          _this2.popup = _this2.createPopup(actualData, _this2.container, _this2.menu, _this2.scroll)._create();\n          _this2.button = button;\n\n          _this2.container.appendChild(_this2.popup);\n\n          _this2._open(_this2.popup);\n\n          _this2.scroll._hideScroll();\n\n          _this2.menu.classList.add('menu_closed');\n        });\n      }); // // закрытие попапа\n      // this.container.addEventListener('click', (event) => {\n      //   if (this.popup != undefined && this.button != undefined && event.target != this.button) {\n      //     if (!this.popup.contains(event.target)) {\n      //       this.menu.classList.remove('menu_closed');\n      //       this.scroll._resetHideScroll();\n      //       this.popup.remove();\n      //       this.popup = undefined;\n      //       this.button = undefined;\n      //     }\n      //     else return;\n      //   }\n      //   else return;\n      // })\n    }\n  }]);\n\n  return Popups;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Footer.js\nfunction Footer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Footer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Footer_createClass(Constructor, protoProps, staticProps) { if (protoProps) Footer_defineProperties(Constructor.prototype, protoProps); if (staticProps) Footer_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Footer = /*#__PURE__*/function () {\n  function Footer(footer, text) {\n    Footer_classCallCheck(this, Footer);\n\n    this.footer = footer;\n    this.text = text;\n  }\n\n  Footer_createClass(Footer, [{\n    key: \"setContent\",\n    value: function setContent() {\n      this.footer.textContent = \"2017 \\u2013 \".concat(this._getСurrentYear(), \" \").concat(this.text);\n    }\n  }, {\n    key: \"_get\\u0421urrentYear\",\n    value: function _getСurrentYear() {\n      var year = new Date().getFullYear();\n\n      if (year >= 2022) {\n        return year;\n      } else return 2022;\n    }\n  }]);\n\n  return Footer;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Scroll.js\nfunction Scroll_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Scroll_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Scroll_createClass(Constructor, protoProps, staticProps) { if (protoProps) Scroll_defineProperties(Constructor.prototype, protoProps); if (staticProps) Scroll_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Scroll = /*#__PURE__*/function () {\n  function Scroll(body, blure) {\n    Scroll_classCallCheck(this, Scroll);\n\n    this.body = body;\n    this.blure = blure;\n  }\n\n  Scroll_createClass(Scroll, [{\n    key: \"_hasScrollbar\",\n    value: function _hasScrollbar() {\n      // проверка на боковой скролл\n      return this.body.scrollHeight > this.body.clientHeight;\n    }\n  }, {\n    key: \"_getScrollbarSize\",\n    value: function _getScrollbarSize() {\n      // получение ширины скролла\n      var outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.width = '100%';\n      outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n\n      this.body.appendChild(outer);\n      var widthNoScroll = outer.offsetWidth; // force scrollbars\n\n      outer.style.overflow = 'scroll'; // add innerdiv\n\n      var inner = document.createElement('div');\n      inner.style.width = '100%';\n      outer.appendChild(inner);\n      var widthWithScroll = inner.offsetWidth; // remove divs\n\n      outer.parentNode.removeChild(outer);\n      return widthNoScroll - widthWithScroll;\n    }\n  }, {\n    key: \"_hideScroll\",\n    value: function _hideScroll() {\n      this.body.classList.add('no-scroll'); // запоминаем текущую прокрутку сверху\n\n      this.scrollTop = window.pageYOffset;\n      this.body.style.position = 'fixed';\n\n      if (this._hasScrollbar()) {\n        // с учетом горизонтального скролла. Чтобы небыло рывка при открытии модального окна\n        this.body.style.width = \"calc(100% - \".concat(this._getScrollbarSize(), \"px)\");\n      } else {\n        this.body.style.width = '100%';\n      }\n\n      this.body.style.top = -this.scrollTop + 'px';\n\n      this.blure._add();\n    }\n  }, {\n    key: \"_resetHideScroll\",\n    value: function _resetHideScroll() {\n      this.body.classList.remove('no-scroll');\n      this.body.style.position = '';\n      this.body.style.width = '';\n      this.body.style.top = '';\n      window.scroll(0, this.scrollTop);\n\n      this.blure._remove();\n    }\n  }]);\n\n  return Scroll;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Blure.js\nfunction Blure_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Blure_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Blure_createClass(Constructor, protoProps, staticProps) { if (protoProps) Blure_defineProperties(Constructor.prototype, protoProps); if (staticProps) Blure_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Blure = /*#__PURE__*/function () {\n  function Blure(body) {\n    Blure_classCallCheck(this, Blure);\n\n    this.body = body;\n  }\n\n  Blure_createClass(Blure, [{\n    key: \"_add\",\n    value: function _add() {\n      this.body.classList.add('blure');\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.body.classList.remove('blure');\n    }\n  }]);\n\n  return Blure;\n}();\n\n\n// EXTERNAL MODULE: ./src/js/components/GSAP.js\nvar GSAP = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/js/index.js\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var prazeArray = ['Beauti Baza', 'Beauti Baza', 'Beauti Baza', 'you are beautiful', 'Ты Прекрасна', '你很美丽', 'ты прыгожая', 'du bist schön', 'ти прекрасна', 'tu es belle', 'eres hermoso', 'jesteś piękna', 'BEAUTI BAZA'];\n  var imagesGlitchSlider = ['./images/about_1.jpg', './images/about_2.jpg', './images/about_3.jpg', './images/about_4.jpg', './images/about_5.jpg', './images/about_6.jpg'];\n  var glitchSliderConfig = {\n    nav: false,\n    // navElement: '.scene-nav',\n    slideImages: imagesGlitchSlider,\n    stageWidth: 1280,\n    stageHeight: 720,\n    // stageWidth: 1920,\n    // stageHeight: 1080,\n    displacementImage: './images/displace-circle.jpg',\n    fullScreen: false,\n    transitionDuration: 0.2,\n    // must be 0.1 > transitionGhostDuration\n    transitionGhostDuration: 0.25,\n    transitionFilterIntensity: 350,\n    transitionSpriteIntensity: 2,\n    mouseDispIntensity: 3,\n    interactive: true,\n    autoPlay: true,\n    autoPlaySpeed: 3000\n  };\n  var root = document.querySelector('.root');\n  var company = document.querySelector('.company');\n  var bannerText = document.querySelector('.company__title');\n  var menuContainer = document.querySelector('.menu');\n  var menuButton = document.querySelector('.menu__button');\n  var menuIcon = document.querySelector('.menu__icon');\n  var navigation = document.querySelector('.menu__navigation');\n  var menuLinks = document.querySelectorAll('.menu__link');\n  var servicesButtons = document.querySelectorAll('.services__price-more');\n  var selectionItems = document.querySelectorAll('.selection__item');\n  var mapOne = document.querySelector('#mapOne');\n  var buttonMapsOne = document.querySelector('#buttonMapsOne');\n  var mapTwo = document.querySelector('#mapTwo');\n  var buttonMapsTwo = document.querySelector('#buttonMapsTwo');\n  var spinner = document.querySelector('.spinner');\n  var footerText = document.querySelector('#footerText'); //Id - Id блока карты, buttonId - Id кнопка, coordinatesX и coordinatesY координаты, заголовок и текст метки\n\n  var blure = new Blure(root);\n  var scroll = new Scroll(root, blure);\n  var menu = new Menu(root, menuContainer, menuButton, menuIcon, navigation, menuLinks, scroll);\n  var glitch = new Glitch(prazeArray, bannerText, 600);\n  var selection = new Selection(selectionItems, 'selection__item', 'selection__header', 'selection__content', 'selection__button', '_opened');\n\n  var createPopup = function createPopup() {\n    for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n      arg[_key] = arguments[_key];\n    }\n\n    return _construct(Popup, arg);\n  };\n\n  var popups = new Popups(root, [nails, brows, face, lashes, hair, men], servicesButtons, createPopup, 'popup', 'popup__button', '_opened', scroll, menuContainer);\n  var ymapsOne = new Ymaps(buttonMapsOne, 'mapOne', 'contacts__maps_opened', '52.428975', '31.007007', 'Бьюти База', 'г. Гомель, ул. Кирова, 20');\n  var ymapsTwo = new Ymaps(buttonMapsTwo, 'mapTwo', 'contacts__maps_opened', '52.404660', '30.941536', 'Бьюти База', 'г. Гомель, пр-т Октября, 95');\n  var mapOnePrompt = new Map(mapOne, 'contacts__maps_cover');\n  var mapTwoPrompt = new Map(mapTwo, 'contacts__maps_cover');\n  var footer = new Footer(footerText, '©Beauti Baza'); // --------------------------------------------------------------------------------------------------------------------\n  // const swiper = new Swiper('.swiper', {\n  //   // navigation: {\n  //   //   nextEl: '.swiper-button-next', \n  //   //   prevEL: '.swiper-button-prev'\n  //   // },\n  //   pagination: {\n  //     el: '.swiper-pagination',\n  //     clickable: true,\n  //     // type: 'fraction',\n  //   },\n  //   direction: 'vertical'\n  // });\n  // let useragent = detect.parse(navigator.userAgent);\n  // alert(useragent.browser.family); \n  // if (useragent.browser.family === 'Mobile Safari') {\n  // company.style.height = '90vh';\n  // company.style.color = 'red';\n  // }\n  // Выводим нужные значения в консоли браузера\n  // console.log(\n  // useragent.browser\n  // useragent.browser.family,\n  // useragent.browser.version,\n  // useragent.os.name\n  // )\n  /////////////////////////////////////////////\n  // let docWidth = document.documentElement.clientWidth;\n  // const subtitle = document.querySelector('#subtitle');\n  // function removeTitleSpan() {\n  //   if (docWidth > 1600) {\n  //     subtitle.classList.remove('span_br');\n  //   }\n  //   else {\n  //     subtitle.classList.add('span_br');\n  //   }\n  // }\n  // removeTitleSpan();\n  // window.addEventListener('resize', () => {\n  //   docWidth = document.documentElement.clientWidth;\n  //   removeTitleSpan();\n  // });\n  /////////////////////////////////////////////\n\n  var scriptsLoaded = false;\n  document.addEventListener('scroll', function () {\n    var addScript = function addScript(url, func) {\n      var script = document.createElement('script');\n      script.src = url;\n      document.body.append(script);\n\n      if (func !== undefined) {\n        script.onload = function () {\n          setTimeout(func, 1);\n        };\n      }\n\n      ;\n    };\n\n    if (!scriptsLoaded) {\n      scriptsLoaded = true;\n      addScript('./js/vendor/TweenMax2.1.3.min.js');\n      addScript('./js/vendor/rgbShiftSlider.min.js');\n\n      var glitchSlider = function glitchSlider() {\n        return new rbgShiftSlider(glitchSliderConfig);\n      };\n\n      addScript('./js/vendor/pixi.min.js', glitchSlider);\n      spinner.classList.add('spinner_hidden');\n      addScript('https://api-maps.yandex.ru/2.1/?lang=ru_RU&amp;apikey=0c91191e-f3dd-4782-8118-aab2a666cfbb');\n    } else return;\n  });\n  menu.setEventListener();\n  glitch.run();\n  selection.setEventListeners();\n  ymapsOne.setEventListener();\n  ymapsTwo.setEventListener();\n  mapOnePrompt.setEventListener();\n  mapTwoPrompt.setEventListener();\n  popups.setEventListeners();\n  footer.setContent();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")}]);